"use client";
import styles from "../project.module.css";
import post from "../../styles/post.module.css";
import { useState } from "react";
import Link from "next/link";
import TabContainer from "@/app/components/TabContainer";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faBook, faGlobe, faListCheck } from "@fortawesome/free-solid-svg-icons";
const Page = ({ params }) => {
    const [tab, setTab] = useState(1);
    const handleTab = (newTab) => () => setTab(newTab);

    const tabContent1 = (index) => {
        return (
            <>
                <h1 className={post.h1}>Narrative:</h1>
                <p>
                    Using a previous Term Project focused on building for mobile
                    web, I recreated the site using ReactJs. The site contains
                    card styled content, with monkey jokes generated by GPT-4.
                </p>
                <h1 className={post.h1}>Steps:</h1>
                <p>Transfer Vanilla HTML site to React</p>
                <p>Load Card data from json</p>
                <p>Fetch API data with prompt</p>
                <p>UseEffect Response and mapping results</p>
                <h2 className={post.h1}>Vanilla to React:</h2>
                <p>
                    The layout of the single page app is simple, I build a
                    Header and Footer component that could be reused if the app
                    was expanded. Then, I created a banner component for the
                    largest image and text block. A Card Component was created
                    that took inputs title and description, reused in the
                    postGrid component.
                </p>
            </>
        );
    };

    const tabContent2 = (index) => {
        return (
            <>
                <h2 className={post.h1}>Loading Cards from Json:</h2>
                <p>
                    A json file with data from the original site was created and
                    loaded as an object, passed through the map function to
                    create the post grid.
                </p>
                <h2 className={post.h1}>Fetch OpenAI API:</h2>
                <p>
                    Implemented the OpenAI API to generate new content, setting
                    up an API object and an await function to fetch monkey
                    jokes.
                </p>
                <h2 className={post.h1}>UseEffect and Finishing Touches:</h2>
                <p>
                    JSON.parse was used for the response when setting the state
                    value, displaying a loading text until the content loads and
                    the fetched data is mapped to card components.
                </p>
                <h1 className={post.h1}>Conclusion:</h1>
                <p>
                    This project showcases porting a site to React, using AI via
                    an authenticated API call, and dynamic component loading.
                    Originally a styling exercise, it evolved into a
                    demonstration of integrating React with third-party APIs and
                    JSON data manipulation.
                </p>
            </>
        );
    };
    const tabContent3 = (index) => {
        const id = index + 1;
        return (
            <>
                <div className={post.linkContainer}>
                    <Link
                        className={post.link}
                        rel="noopener noreferrer"
                        target="_blank"
                        href="https://monkey-react.vercel.app/"
                    >
                        Visit Site{" "}
                    </Link>
                </div>
            </>
        );
    };
    return (
        <div className={post.post}>
            <div className={styles.title}>
                <h1 className={styles.h1}>Project Reflections</h1>
                <h2>React and API Integration</h2>
            </div>

            <TabContainer
                contentTabs={[
                    { title: "Narrative", icon: <FontAwesomeIcon size='xl'icon={faBook} />,content: tabContent1() },
                    { title: "Steps", icon: <FontAwesomeIcon size='xl'icon={faListCheck} />,content: tabContent2() },
                    { title: "Live Site", icon: <FontAwesomeIcon size='xl'icon={faGlobe} />,content: tabContent3() },
                ]}
            />

            {/* <div className={post.container}>
                <div className={post.tabs}>
                    <button onClick={handleTab(1)}>Narrative</button>
                    <button onClick={handleTab(2)}>Steps</button>
                </div>
                <div className={post.canvas}></div>
                {tab === 1 && tabContent1()}
                {tab === 2 && tabContent2()}
            </div> */}
            {/* <div className={post.container2}>
                <Link
                    className={post.link}
                    rel="noopener noreferrer"
                    target="_blank"
                    href="https://monkey-react.vercel.app/"
                >
                    Visit Site{" "}
                </Link>
            </div> */}
        </div>
    );
};

export default Page;
